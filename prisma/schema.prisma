generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model sessions {
  id      Int    @id(map: "sessions_pk") @default(autoincrement())
  userId Int     @unique
  token   String @unique @db.VarChar
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users   users  @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sessions_fk0")
}

model users {
  id       Int        @id(map: "users_pk") @default(autoincrement())
  name     String     @db.VarChar
  email    String     @unique @db.VarChar
  password String     @db.VarChar
  image    String?    @db.VarChar
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  merch    merch[]
  posts    posts[]
  projects projects[]
  sessions sessions[]
}

model merch {
  id      Int    @id(map: "merch_pk") @default(autoincrement())
  userId Int
  image   String
  title   String @db.VarChar
  price   Int
  users   users  @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "merch_fk0")
}

model posts {
  id          Int     @id(map: "posts_pk") @default(autoincrement())
  userId     Int
  title       String  @db.VarChar
  description String
  link        String? @db.VarChar
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users       users   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "posts_fk0")
}

model projects {
  id          Int    @id(map: "projects_pk") @default(autoincrement())
  userId     Int
  name        String @db.VarChar
  instruments String @db.VarChar
  description String @db.VarChar
  users       users  @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "projects_fk0")
}